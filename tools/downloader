#!/bin/bash

command -v wget >/dev/null 2>&1 || { echo >&2 "I require wget but it's not installed.  Aborting."; }
command -v phantomjs >/dev/null 2>&1 || { echo >&2 "I require phantomjs but it's not installed.  Aborting."; }

# Let's set up the support functions first
source ./common.sh

# Set up folders
rm -rf $TMPDIR
types=( png jpeg gif css javascript )

for i in "${types[@]}"; do
    mkdir -p "$TMPDIR/$i/pre-processed" "$TMPDIR/$i/pre-processed-gzip" \
    "$TMPDIR/$i/post-processed" "$TMPDIR/$i/post-processed-gzip" 
done

echo "Web Downloader Tool 1.0.1 (c) 2013 Ditesh Gathani <ditesh@gathani.org>"
echo
echo -n "Running webutil ... "
OUTPUT=`phantomjs ../webutil.js -d -u -s $@`
echo "done."

if [ "$?" -ne "0" ] ; then
    echo "unable to connect";
    echo
    exit 1
fi

if $(echo $@ | grep -q "\-ua ipad"); then
    USERAGENT="Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10";
elif $(echo $@ | grep -q "\-ua iphone"); then
    USERAGENT="Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3";
elif $(echo $@ | grep -q "\-ua android"); then
    USERAGENT="Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30";
elif $(echo $@ | grep -q "\-ua firefox"); then
    USERAGENT="Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1"
elif $(echo $@ | grep -q "\-ua ie"); then
    USERAGENT="Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)";
else
    USERAGENT="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17";
fi

OLDIFS=$IFS
IFS=$'\n'
for i in $OUTPUT; do

    for j in "${types[@]}"; do

        if $( echo $i | awk '{print $2}' | grep --quiet "$j" ); then
            echo $i | awk '{print $4}' >> "$TMPDIR/${j}-files"
        fi

    done
done

echo -n "Checking for PNG files ... "
if [ -f "$TMPDIR/png-files" ]; then

    echo -n "found ... downloading ... "
    download png
    echo "done."

else echo "not found."
fi

echo -n "Checking for JPEG files ... "
if [ -f "$TMPDIR/jpeg-files" ]; then

    echo -n "found ... downloading ... "
    download jpeg
    echo "done."

else echo "not found."
fi

echo -n "Checking for GIF files ... "
if [ -f "$TMPDIR/gif-files" ]; then

    echo -n "found ... downloading ... "
    download gif
    echo "done."

else echo "not found."
fi

echo -n "Checking for CSS files ... "
if [ -f "$TMPDIR/css-files" ]; then

    echo -n "found ... downloading ... "
    download css
    echo "done."

else echo "not found."
fi

echo -n "Checking for JS files ... "
if [ -f "$TMPDIR/javascript-files" ]; then

    echo -n "found ... downloading ... "
    download javascript
    echo "done."

else echo "not found."
fi

echo
exit 0

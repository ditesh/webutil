#!/bin/bash
#
# webutil 1.0.1
#
# Copyright (c) 2012-2013 Ditesh Shashikant Gathani
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

command -v curl >/dev/null 2>&1 || { echo >&2 "I require curl but it's not installed.  Aborting."; }
command -v phantomjs >/dev/null 2>&1 || { echo >&2 "I require phantomjs but it's not installed.  Aborting."; }

# Let's set up the support functions first
# Let's set up the support functions first
CURPATH=`dirname ${0}`
BASEPATH=`readlink -f ${CURPATH}`
source "$BASEPATH/common.sh"

# Set up folders
rm -rf $TMPDIR
types=( png jpg gif css js )

for i in "${types[@]}"; do
    mkdir -p "$TMPDIR/$i/pre-processed" "$TMPDIR/$i/pre-processed-gzip" \
    "$TMPDIR/$i/post-processed" "$TMPDIR/$i/post-processed-gzip" 
done

echo -e "\e[1;36mWeb Downloader Tool 1.0.1 (c) 2013 Ditesh Gathani <ditesh@gathani.org>\e[0m"
echo
echo -n "Running webutil ... "
OUTPUT=`phantomjs $BASEPATH/../webutil.js -d -lu -s $@`

if [ "$?" -ne "0" ] ; then
    echo "unable to connect.";
    echo
    exit 1
fi

echo "done."

if $(echo $@ | grep -q "\-ua ipad"); then
    USERAGENT="Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10";
elif $(echo $@ | grep -q "\-ua iphone"); then
    USERAGENT="Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3";
elif $(echo $@ | grep -q "\-ua android"); then
    USERAGENT="Mozilla/5.0 (Linux; U; Android 4.0.3; ko-kr; LG-L160L Build/IML74K) AppleWebkit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30";
elif $(echo $@ | grep -q "\-ua firefox"); then
    USERAGENT="Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1"
elif $(echo $@ | grep -q "\-ua ie"); then
    USERAGENT="Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)";
else
    USERAGENT="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17";
fi

OLDIFS=$IFS
IFS=$'\n'
for i in $OUTPUT; do

    for j in "${types[@]}"; do

        if $( echo $i | awk '{print $1}' | grep --quiet -i "$j" ); then
            echo $i | awk '{print $3}' >> "$TMPDIR/${j}-files"
        fi

    done
done

echo -n "Checking for PNG files ... "
if [ -f "$TMPDIR/png-files" ]; then

    echo -n "found ... downloading ... "
    download png
    echo "done."

else echo "not found."
fi

echo -n "Checking for JPEG files ... "
if [ -f "$TMPDIR/jpg-files" ]; then

    echo -n "found ... downloading ... "
    download jpg
    echo "done."

else echo "not found."
fi

echo -n "Checking for GIF files ... "
if [ -f "$TMPDIR/gif-files" ]; then

    echo -n "found ... downloading ... "
    download gif
    echo "done."

else echo "not found."
fi

echo -n "Checking for CSS files ... "
if [ -f "$TMPDIR/css-files" ]; then

    echo -n "found ... downloading ... "
    download css
    echo "done."

else echo "not found."
fi

echo -n "Checking for JS files ... "
if [ -f "$TMPDIR/js-files" ]; then

    echo -n "found ... downloading ... "
    download js
    echo "done."

else echo "not found."
fi

echo
exit 0
